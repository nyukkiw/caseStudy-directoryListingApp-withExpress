<% layout('layouts/app')%>
<link rel="stylesheet" href="/css/starts.css">
   <div class="row">
    <div class="col-6">
        <div class="card">
        <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <% if(place.images.length){ %>
                <% place.images.forEach((image, index)=> { %>
                    <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                        <img src="/images/<%= image.filename %>" class="d-block w-100" alt="place.title">
                    </div>
                <% }) %>
                <% }else{ %>
                     <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                        <img src="https://source.unsplash.com/collection/2349781/1280x720" class="d-block w-100" alt="place.title">
                    </div>
                <% } %>
            </div>
            <% if(place.images.length > 1){ %>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
            <% } %>
            </div>
            <div class="card-body">
                <h5 class="card-title">
                    <%= place.title %>
                </h5>
                <p class="card-text"><%= place.description %></p>
            </div>
             <ul class="list-group list-group-flush">
                <li class="list-group-item"><%= place.location %></li>
                <li class="list-group-item">Author: <%= place.author.username %></li>
                <li class="list-group-item"><%= place.price %></li>
            </ul>
            <% if(currentUser && place.author.equals(currentUser._id)) { %>
            <div class="card-body">
                <a href="/places/<%= place._id %>/edit" class="card-link btn btn-warning text-white">Edit</a>
                <form action="/places/<%= place._id %>?_method=DELETE" method="POST" style="display: inline!important">
                    <button class="btn btn-danger">Delete</button>
                </form>
            </div>
            <% } %>
        </div>
    </div>

    <div class="col-6">
        <div style="width: 640px; height: 480px; margin-bottom: 5%;" id="mapContainer"></div>
        <% if(currentUser) { %>
        <h3>Leave a Review</h3>
            <form action="/places/<%= place._id %>/reviews" method="POST" class="validated-form mb-3" novalidate>
                <div class="mb-3">
                    <label for="rating">Rating</label>
                    <fieldset class="starability-basic">
                    <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
                    <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                    <label for="first-rate1" title="Terrible">1 star</label>
                    <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                    <label for="first-rate2" title="Not good">2 stars</label>
                    <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                    <label for="first-rate3" title="Average">3 stars</label>
                    <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                    <label for="first-rate4" title="Very good">4 stars</label>
                    <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                    <label for="first-rate5" title="Amazing">5 stars</label>
                    </fieldset>
                </div>
                <div class="mb-3">
                    <label for="review">Review</label>
                    <textarea name="review[body]" id="body" cols="30" rows="5" class="form-control" required></textarea>
                    <div class="valid-feedback">
                    Looks good!
                    </div>
                    <div class="invalid-feedback">
                        please fill out this field
                    </div>
                </div>
                <button type="submit" class="btn btn-success">Submit</button>
            </form>
        <% } %>

        <% for(const review of place.reviews) {%>
            <div class="card mb-3">
                <div class="card-body">
                    <p class="starability-result" data-rating="<%= review.rating %>">
                        Rated: <%= review.rating %> starts
                    </p>
                    <p class="card-text">
                        <%= review.body %>
                    </p>
                     <% if(currentUser && review.author.equals(currentUser._id)) { %>
                    <form action="/places/<%= place._id %>/reviews/<%= review._id %>?_method=DELETE" method="POST" style="display: inline!important ;">
                        <button class="btn btn-danger btn-small">Delete</button>
                    </form>
                    <% } %>
                </div>
            </div>
        <% } %>
    </div>
   </div>

<script>
    const place = <%- JSON.stringify(place) %>;
    const placeLocation = {lng: place.geometry.coordinates[0], lat: place.geometry.coordinates[1]}
 </script>

    <script>

        function addMarker(group, coordinates, html){
             const svgMarkup = `<svg version="1.0" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 64 64" enable-background="new 0 0 64 64" xml:space="preserve" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0">
            </g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path fill="#F76D57" d="M32,52.789l-12-18C18.5,32,16,28.031,16,24c0-8.836,7.164-16,16-16s16,7.164,16,16 c0,4.031-2.055,8-4,10.789L32,52.789z">
                </path> <g> <path fill="#394240" d="M32,0C18.746,0,8,10.746,8,24c0,5.219,1.711,10.008,4.555,13.93c0.051,0.094,0.059,0.199,0.117,0.289 l16,24C29.414,63.332,30.664,64,32,64s2.586-0.668,3.328-1.781l16-24c0.059-0.09,0.066-0.195,0.117-0.289 C54.289,34.008,56,29.219,56,24C56,10.746,45.254,0,32,0z M44,34.789l-12,18l-12-18C18.5,32,16,28.031,16,24 c0-8.836,7.164-16,16-16s16,7.164,16,16C48,28.031,45.945,32,44,34.789z">
                    </path> <circle fill="#394240" cx="32" cy="24" r="8"></circle> </g> </g> </g></svg>`
        
        const icon = new H.map.Icon(svgMarkup);
        const marker = new H.map.Marker(placeLocation, {icon: icon});
        marker.setData(html);
        group.addObject(marker);
        }

        function addInfoBubble(map){
            const group = new H.map.Group();
            map.addObject(group);
            group.addEventListener('tap', (e) => {
                const bubble = new H.ui.InfoBubble(e.target.getGeometry(), {
                    content: e.target.getData()
                })
                ui.addBubble(bubble);

            },false)
            addMarker(group, placeLocation, `<div>${place.title}</div>` + `<div>${place.description}</div>`)

        }

      // Initialize the platform object
      const platform = new H.service.Platform({
        'apikey': 'mjTonP4fqtSZHG7GFCZvLO8aPOk6VmPU8zSVt4l3Snw'
      });

      // Obtain the default map types from the platform object
      const defaultLayers= platform.createDefaultLayers();

      // Instantiate (and display) the map
      const map = new H.Map(
        document.getElementById('mapContainer'),
        defaultLayers.vector.normal.map,
        {
          zoom: 10,
          center: placeLocation
        });

        
        const ui = H.ui.UI.createDefault(map, defaultLayers, 'en-US');
        const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
        
        addInfoBubble(map)
       
    </script>